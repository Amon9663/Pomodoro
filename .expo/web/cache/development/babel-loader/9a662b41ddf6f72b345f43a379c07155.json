{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\vertw\\\\Amon9663\\\\project1\\\\Counter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Counter = function (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _super.call(this, props);\n\n    _this.inc = function () {\n      _this.setState(function (prevState) {\n        return {\n          count: prevState.count - 1\n        };\n      });\n    };\n\n    _this.state = {\n      count: props.time\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.count > 0) {\n        this.interval = setInterval(this.inc, 1000);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, this.state.count, \" \"), React.createElement(Button, {\n        title: \"Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 8\n        }\n      }));\n    }\n  }]);\n\n  return Counter;\n}(React.Component);\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/vertw/Amon9663/project1/Counter.js"],"names":["React","Counter","props","inc","setState","prevState","count","state","time","interval","setInterval","clearInterval","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;IAGOC,O;;;;;AAEH,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,8BAAMA,KAAN;;AADmB,UAiBrBC,GAjBqB,GAiBf,YAAM;AAEV,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BC,UAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AADC,SAAL;AAAA,OAAvB;AAGD,KAtBoB;;AAEnB,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAGJ,KAAK,CAACM;AADH,KAAb;AAFmB;AAKpB;;;;wCAEmB;AAClB,UAAI,KAAKF,KAAL,GAAa,CAAjB,EAAqB;AACrB,aAAKG,QAAL,GAAgBC,WAAW,CAAC,KAAKP,GAAN,EAAW,IAAX,CAA3B;AACC;AACF;;;2CAEsB;AACrBQ,MAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb;AACD;;;6BASQ;AACP,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKF,KAAL,CAAWD,KAAnB,MADA,EAEA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGD,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHC,CADJ;AAQD;;;;EAnCoBN,KAAK,CAACY,S;;AAuC7B,eAAeX,OAAf","sourcesContent":["import React from 'react'\r\nimport {Text, Button, View} from 'react-native'\r\n\r\n class Counter extends React.Component { \r\n  \r\n    constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      count : props.time,\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.count > 0)  {\r\n    this.interval = setInterval(this.inc, 1000)\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n  \r\n  inc = () => {\r\n \r\n    this.setState(prevState => ({\r\n      count: prevState.count - 1,\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return( \r\n        <View>\r\n        <Text >{this.state.count} </Text>\r\n        <Button title=\"Start\" />\r\n       <Button title=\"Reset\" />\r\n        </View>\r\n      )\r\n    \r\n  }\r\n\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}