{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\vertw\\\\Amon9663\\\\project1\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport PropTypes from 'prop-types';\nimport Counter from \"./Counter.js\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.toggleCounter = function () {\n      return _this.setState(function (prevState) {\n        return {\n          switchCounter: !prevState.switchCounter\n        };\n      });\n    };\n\n    _this.state = {\n      switchCounter: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.timer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 4\n        }\n      }, React.createElement(Text, {\n        style: styles.pomoTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, \"Pomodoro Timer\"), React.createElement(View, {\n        style: styles.timer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Counter, {\n        time: 1500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  timer2: {\n    paddingTop: Constants.statusBarHeight + 5\n  },\n  pomoTitle: {\n    fontSize: 50,\n    color: \"white\",\n    textAlign: 'center',\n    m: m\n  },\n  timer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/vertw/Amon9663/project1/App.js"],"names":["React","Constants","PropTypes","Counter","App","props","toggleCounter","setState","prevState","switchCounter","state","styles","container","timer2","pomoTitle","timer","Component","StyleSheet","create","flex","backgroundColor","paddingTop","statusBarHeight","fontSize","color","textAlign","m","flexDirection","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP;;IAGqBC,G;;;;;AACjB,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAQpBC,aARoB,GAQJ;AAAA,aAAM,MAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAChDC,UAAAA,aAAa,EAAE,CAACD,SAAS,CAACC;AADsB,SAAL;AAAA,OAAvB,CAAN;AAAA,KARI;;AAEZ,UAAKC,KAAL,GAAa;AACTD,MAAAA,aAAa,EAAG;AADP,KAAb;AAFY;AAKd;;;;6BASK;AAET,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGF,MAAM,CAACG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,EAGG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHH,CADC,CAFA;AAcC;;;;EA/B4Bf,KAAK,CAACgB,S;;SAAlBZ,G;AAkCrB,IAAMO,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAMjCP,EAAAA,MAAM,EAAC;AAEHQ,IAAAA,UAAU,EAAEpB,SAAS,CAACqB,eAAV,GAA0B;AAFnC,GAN0B;AAYjCR,EAAAA,SAAS,EAAC;AACNS,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,SAAS,EAAE,QAHL;AAINC,IAAAA,CAAC,EAADA;AAJM,GAZuB;AAqBjCX,EAAAA,KAAK,EAAC;AACFY,IAAAA,aAAa,EAAC,QADZ;AAEFC,IAAAA,UAAU,EAAE,QAFV;AAIFP,IAAAA,UAAU,EAAE;AAJV;AArB2B,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport Constants from 'expo-constants'\nimport PropTypes from 'prop-types'\nimport Counter from './Counter.js'\n\n\nexport default class App extends React.Component {\n    constructor(props){\n      super(props) \n          this.state = {\n              switchCounter : true,\n          }\n       }\n    \n    \n  toggleCounter = () => this.setState(prevState => ({\n    switchCounter: !prevState.switchCounter,\n  }))\n \n\n\n    render() {\n        \n    return (\n    \n    <View style={styles.container}>\n   <View style = {styles.timer2} >\n      <Text style ={styles.pomoTitle}>Pomodoro Timer</Text>\n     \n      <View style={styles.timer} >\n      <Counter time = {1500} />\n       \n      </View>\n      </View>\n    </View>\n  )\n      \n    }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  \n  },\ntimer2:{\n\n    paddingTop: Constants.statusBarHeight+5,\n    \n    \n},   \npomoTitle:{\n    fontSize: 50,\n    color: \"white\",\n    textAlign: 'center',\n    m\n     \n    \n},   \n\ntimer:{\n    flexDirection:'column',\n    alignItems: 'center',\n    \n    paddingTop: 10,\n},    \n});\n"]},"metadata":{},"sourceType":"module"}